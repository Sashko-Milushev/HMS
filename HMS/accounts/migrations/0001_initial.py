# Generated by Django 4.1.7 on 2023-03-03 12:21

import HMS.accounts.managers
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(max_length=30, validators=[django.core.validators.MinLengthValidator(2)], verbose_name='First Name')),
                ('last_name', models.CharField(max_length=30, validators=[django.core.validators.MinLengthValidator(2)], verbose_name='Last Name')),
                ('username', models.CharField(help_text='Required. 30 characters or fewer. Letters and digits only.', max_length=30, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator(), django.core.validators.MinLengthValidator(2)], verbose_name='Username')),
                ('position', models.CharField(choices=[('receptionist', 'Receptionist'), ('front_office_manager', 'Front office manager'), ('hotel_manager', 'Hotel manager')], max_length=20)),
                ('email', models.EmailField(max_length=254, unique=True, validators=[django.core.validators.EmailValidator(message='Invalid Email')], verbose_name='Email')),
                ('date_joined', models.DateField()),
                ('is_staff', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', HMS.accounts.managers.AppUserManager()),
            ],
        ),
    ]
